from qha.unit_conversion import *
import numpy as np
import pandas as pd


Hugoniot_p = np.array([0.0, 21.792, 29.427, 34.965, 34.986, 35.493, 35.893, 35.803, 37.189, 36.934, 39.65, 40.056, 40.928, 40.818, 41.409, 41.89, 40.847, 42.514, 42.721, 42.873, 46.405, 45.786, 46.133, 46.406, 46.061, 46.051, 46.859, 47.542, 47.43, 48.685, 52.801, 52.734, 60.944, 60.976, 67.609, 67.537, 68.823, 69.849, 69.762, 70.782, 71.605, 76.898, 76.804, 77.665, 77.584, 82.511, 83.927, 85.163, 87.935, 89.145, 90.696, 93.628, 92.276, 94.26, 94.743, 100.717, 100.332, 100.201, 100.148, 101.04,
                       108.602, 110.093, 111.911, 121.303, 118.81, 118.673, 123.937, 126.089, 124.723, 131.171, 133.747, 134.582, 132.729, 134.346, 134.549, 136.876, 135.705, 136.6, 136.165, 143.356, 142.906, 144.224, 144.243, 149.643, 152.066, 156.763, 159.661, 158.189, 160.695, 164.418, 163.735, 165.915, 163.647, 165.375, 165.035, 164.656, 168.918, 169.011, 175.786, 175.642, 178.149, 177.253, 184.49, 190.348, 192.367, 202.508, 211.085, 218.58, 224.276, 227.685, 243.338, 245.128, 267.793, 324.325, 330.719])
Hugoniot_v = density_to_a3(np.array([7.87, 8.917, 9.293, 9.429, 9.428, 9.44, 9.455, 9.459, 9.529, 9.556, 9.549, 9.545, 9.555, 9.565, 9.663, 9.592, 9.688, 9.606, 9.598, 9.653, 9.677, 9.741, 9.742, 9.709, 9.759, 9.766, 9.709, 9.814, 9.629, 9.778, 9.934, 9.942, 10.045, 10.064, 10.143, 10.15, 10.175, 10.173, 10.204, 10.216, 10.263, 10.381, 10.394, 10.357, 10.369, 10.497, 10.524, 10.476, 10.595, 10.66, 10.612, 10.649, 10.725, 10.676, 10.93, 10.718, 10.784, 10.802,
                                     10.838, 10.806, 10.849, 10.904, 10.892, 10.867, 10.981, 11.013, 11.12, 11.056, 11.159, 11.194, 11.203, 11.195, 11.287, 11.224, 11.198, 11.232, 11.329, 11.287, 11.367, 11.226, 11.274, 11.334, 11.333, 11.422, 11.374, 11.376, 11.416, 11.591, 11.511, 11.452, 11.528, 11.499, 11.566, 11.558, 11.536, 11.656, 11.658, 11.689, 11.704, 11.728, 11.676, 11.73, 11.91, 11.742, 11.881, 11.967, 12.008, 12.053, 12.142, 12.084, 12.338, 12.324, 12.612, 13.021, 12.939]))

df_hugo = pd.DataFrame({
    'p':Hugoniot_p,
    'v':Hugoniot_v
})
df_hugo.to_csv("data/hugoniot.csv")


Ramp_p = np.array([5.779127482, 7.498876698, 9.598955068, 11.40138454, 13.79139498, 15.89092215, 17.33672414, 19.71395968, 22.46400209, 24.66329676, 26.63751742, 27.74028823, 30.49356683, 33.25075633, 35.44362032, 37.3906925, 39.6639162, 41.80421201, 44.65124739, 47.30114943, 49.81462905, 53.07223093, 56.11486416, 59.32285789, 62.24973877, 66.05707245, 68.73036715, 73.31362833, 77.31408046, 80.88858751,
                   86.91212048, 90.41382128, 95.24482177, 99.00275221, 104.9687079, 111.947759, 114.138563, 121.3746238, 126.5114032, 130.6942677, 136.9531377, 142.4208363, 147.090112, 152.400977, 155.8117735, 162.4550997, 169.0602077, 175.1731654, 181.2240997, 186.9357804, 193.6204636, 199.7107543, 206.2348232, 213.9754493, 220.1838964, 228.9182573, 238.6067137, 244.7285442, 253.3118016, 259.5652669, 267.6681085, 271.033908])
Ramp_d = np.array([7.956423313, 8.041858896, 8.127294479, 8.212730061, 8.298165644, 8.383601227, 8.46903681, 8.554472393, 8.639907975, 8.725343558, 8.810779141, 8.896214724, 8.981650307, 9.06708589, 9.152521472, 9.237957055, 9.323392638, 9.408828221, 9.494263804, 9.579699387, 9.665134969, 9.750570552, 9.836006135, 9.921441718, 10.0068773, 10.09231288, 10.17774847, 10.26318405, 10.34861963, 10.43405521,
                   10.5194908, 10.60492638, 10.69295092, 10.77042048, 10.86123313, 10.94666871, 11.0288681, 11.11753988, 11.20297546, 11.28841104, 11.37384663, 11.45928221, 11.54471779, 11.63015337, 11.71558896, 11.80102454, 11.88646012, 11.97189571, 12.05733129, 12.14276687, 12.22820245, 12.31363804, 12.39907362, 12.4845092, 12.56994479, 12.65343865, 12.74081595, 12.82625153, 12.91168712, 12.9971227, 13.08255828, 13.13692638])



Dubrovinsky_300K_p = np.array([18.25401853, 23.62261462, 32.06667195, 34.75255365, 39.36416185, 41.66785441, 53.19159606, 62.02840024, 91.2352522, 114.6902632,
                               116.9960673, 120.8432972, 123.9219257, 132.7640088, 141.2239027, 147.3790482, 159.2997598, 164.2977802, 182.7632169, 194.6934305, 204.3104495, 256.641856])
Dubrovinsky_300K_v = density_to_a3(np.array([9.0, 9.205479452, 9.468493151, 9.55890411, 9.657534247, 9.723287671, 10.0109589, 10.21643836, 10.84109589, 11.24383562,
                                             11.29315068, 11.34246575, 11.37534247, 11.53972603, 11.67945205, 11.76164384, 11.95890411, 12.04931507, 12.29589041, 12.41917808, 12.55068493, 13.15068493]))

df_dub300 = pd.DataFrame({
    'p': Dubrovinsky_300K_p,
    'v': Dubrovinsky_300K_v
})
df_dub300.to_csv("data/dub300.csv")

Dubrovinsky_650K_p = np.array([25.94214374, 33.23646633, 105.4670467, 117.006625,
                               133.1588672, 148.5403964, 158.929712, 174.6981814, 218.5623037, 242.8049199])
Dubrovinsky_650K_d = np.array([9.147945205, 9.361643836, 11.04657534, 11.2109589,
                               11.46575342, 11.72054795, 11.83972603, 12.08219178, 12.6, 12.87123288])
Dubrovinsky_650K_v = density_to_a3(Dubrovinsky_650K_d)

Dubrovinsky_950K_p = np.array([22.11075039, 36.69306094, 63.57616069,
                               93.18051047, 112.9762188, 136.2443582, 163.16441, 185.8634888, 227.0306438])
Dubrovinsky_950K_d = np.array([8.975342466, 9.452054795, 10.16712329,
                               10.69726027, 11.08767123, 11.44520548, 11.87260274, 12.16027397, 12.6739726])

Dubrovinsky_950K_v = density_to_a3(Dubrovinsky_950K_d)

Dubrovinsky_1150K_p = np.array([20.19452583, 34.0198485, 37.08475203, 43.61152902, 55.12999182,
                                63.58355109, 90.11085597, 108.9479241, 124.3305091, 143.9393459, 159.7146779, 233.5806477])
Dubrovinsky_1150K_d = np.array([8.893150685, 9.263013699, 9.402739726, 9.591780822, 9.920547945,
                                10.10958904, 10.59452055, 10.94794521, 11.19452055, 11.53972603, 11.72876712, 12.68219178])
Dubrovinsky_1150K_v = density_to_a3(Dubrovinsky_1150K_d)


Dewaele_p = np.array([17.7, 19.9, 21.4, 24.1, 27.3, 30.4, 36.1, 33.6, 17.8, 22.9, 30.3, 38.0, 42.9, 47.2, 36.3, 47.5, 56.3, 65.0, 71.2, 76.7, 82.4, 88.9, 99.5, 115.0, 124.0, 28.1, 55.2,
                      78.4, 105.0, 122.0, 136.0, 146.0, 157.0, 167.0, 176.0, 188.0, 197.0, 29.0, 53.0, 90.0, 106.0, 127.0, 133.0, 143.0, 154.0, 163.0, 172.0, 181.0, 189.0, 195.0, 202.0, 201.0, 205.0])
Dewaele_v = (np.array([10.296, 10.201, 10.148, 10.042, 9.936, 9.841, 9.674, 9.742, 10.282, 10.086, 9.8338, 9.593, 9.464, 9.356, 9.652, 9.366, 9.155, 8.963, 8.854, 8.752, 8.659, 8.553, 8.401, 8.214, 8.094,
                       9.8802, 9.1604, 8.74, 8.3254, 8.1093, 7.9487, 7.8436, 7.7307, 7.6604, 7.5693, 7.4474, 7.3906, 9.857, 9.201, 8.565, 8.332, 8.071, 8.01, 7.899, 7.778, 7.701, 7.618, 7.539, 7.478, 7.426, 7.358, 7.356, 7.33]))

df_dewaele = pd.DataFrame({
    'p': Dewaele_p,
    'v': Dewaele_v
})
df_dewaele.to_csv("data/dewaele.csv")


Mao_p = np.array([34.8, 35.6, 56.1, 80.0, 101.6, 112.4, 125.4, 132.1, 141.2, 142.2, 156.7, 170.8, 197.3, 208.7, 210.1,
                  212.1, 227.2, 235.7, 244.8, 247.3, 256.2, 264.0, 270.1, 270.4, 277.8, 292.8, 293.5, 294.7, 304.1, 293.7, 300.6])
Mao_v = b3_to_a3(cm3_mol_to_b3(np.array([5.811, 5.812, 5.474, 5.276, 5.08, 4.93, 4.903, 4.809, 4.714, 4.669, 4.613, 4.475, 4.458, 4.468,
                                         4.417, 4.385, 4.326, 4.321, 4.310, 4.254, 4.287, 4.289, 4.243, 4.213, 4.170, 4.145, 4.137, 4.144, 4.099, 4.147, 4.137])))

df_mao = pd.DataFrame({
    'p': Mao_p,
    'v': Mao_v
})
df_mao.to_csv("data/mao.csv")

Fei_p = np.array([18.72, 25.71, 26.84, 31.18, 34.35, 36.78, 40.1, 45.09, 45.09, 46.34, 48.18, 49.01, 50.54, 51.28, 55.9, 56.65, 58.63, 61.75, 67.44, 68.82, 69.42, 72.15, 77.38, 77.71, 85.42, 87.47, 87.41, 90.62, 21.93, 28.6, 37.76, 43.86, 43.3, 43.1, 52.4, 52.34,
                  57.66, 58.05, 68.37, 69.26, 73.07, 73.46, 80.37, 80.65, 85.68, 84.96, 93.7, 94.13, 92.8, 52.23, 56.86, 57.9, 69.46, 75.52, 86.16, 97.55, 151.3, 156.0, 159.7, 164.6, 156.6, 170.4, 167.1, 181.3, 187.5, 176.6, 175.5, 170.6, 165.8, 161.6, 182.9, 189.6, 198.7, 204.6])

Fei_v = np.array([20.4303, 20.0087, 19.8226, 19.5485, 19.3953, 19.2895, 19.1885, 18.9048, 18.7366, 18.8829, 18.7448, 18.6639, 18.632, 18.5649, 18.3445, 18.3093, 18.212, 18.1111, 17.896, 17.8356, 17.8004, 17.646, 17.5343, 17.4802, 17.3017, 17.2208, 17.2177, 17.144, 20.1714, 19.6617, 19.1752, 18.8791, 19.0675, 19.0256, 18.6278, 18.6384,
                  18.3134, 18.2968, 17.8759, 17.8889, 17.7443, 17.7435, 17.4491, 17.4641, 17.2953, 17.3464, 17.0192, 16.9868, 17.0759, 18.4547, 18.2278, 18.2748, 17.7635, 17.5848, 17.2245, 16.8306, 15.5987, 15.4809, 15.4719, 15.3553, 15.5241, 15.263, 15.2938, 15.0371, 14.9601, 15.0945, 15.1737, 15.2347, 15.3252, 15.3595, 15.0004, 14.867, 14.7541, 14.6858])/2

df_fei = pd.DataFrame({
    'p': Fei_p,
    'v': Fei_v
})
df_fei.to_csv("data/fei.csv")

Sakai_V0 = [11.09, 11.175, 11.234, 11.08, 11.07, 11.035, 11.05, 11.105]
Sakai_K0_BM3 = [179.6, 164.8, 155.3, 184.2, 185.0, 195.1, 196.0, 171.7]
Sakai_3BM_Kp = [4.91, 5.18, 5.37, 4.78, 4.94, 4.93, 4.93, 5.94]
Sakai_Vinet_V0 = [174.7, 160.1, 150.8, 179.2, 180.0, 189.9, 190.8, 167.2]
Sakai_Vinet_Kp = [5.37, 5.65, 5.84, 5.24, 5.40, 5.39, 5.39, 5.39]

Cohen_Vinet_V0 = (20.18/2)
Cohen_Vinet_K0 = 296
Cohen_Vinet_Kp = 4.4

Yamazaki_3BM_V0 = 22.15/2
Yamazaki_3BM_K0 = 202
Yamazaki_3BM_Kp = 4.5

Alfe_3BM_V0 = 10.20
Alfe_3BM_K0 = 291
Alfe_3BM_Kp = 4.4

Ono_Vinet_V0 = 10.265
Ono_Vinet_K0 = 285
Ono_Vinet_Kp = 4.8


def vinet_p(v: float, b0: float, bp0: float, v0: float) -> float:
    x = (v / v0) ** (1 / 3)
    xi = 3 / 2 * (bp0 - 1)
    return 3 * b0 / x ** 2 * (1 - x) * np.exp(xi * (1 - x))


def bm3_p(v, b0, bp0,  v0):
    eta = (v0 / v) ** (1 / 3)
    return 3 / 2 * b0 * (eta ** 7 - eta ** 5) * (1 + 3 / 4 * (bp0 - 4) * (eta ** 2 - 1))


